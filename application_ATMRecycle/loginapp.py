# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'loginUi.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5 import QtCore, QtGui, QtWidgets
import rec_login,sys
from PyQt5.QtCore import *
from PyQt5.QtGui import *
from PyQt5.Qt import Qt
from PyQt5.QtWidgets import *
from main import MainWindow as Ui_MainWindow_Test
import subprocess

class VKQLineEdit(QLineEdit):
    def __init__(self, parent=None, name=None, mainWindowObj=None):
        super(VKQLineEdit, self).__init__(parent)
        self.name = name
        self.setFixedHeight(40)
        self.mainWindowObj = mainWindowObj
        self.setFocusPolicy(Qt.ClickFocus)

    def focusInEvent(self, e):
        self.mainWindowObj.keyboardWidget.currentTextBox = self
        self.mainWindowObj.keyboardWidget.show()

        # self.setStyleSheet("border: 1px solid red;")
        super(VKQLineEdit, self).focusInEvent(e)

    def mousePressEvent(self, e):
        # print(e)
        # self.setFocusPolicy(Qt.ClickFocus)
        super(VKQLineEdit, self).mousePressEvent(e)
        



class KeyboardWidget(QWidget):
    def __init__(self, parent=None):
        super(KeyboardWidget, self).__init__(parent)
        self.currentTextBox = None

        self.signalMapper = QSignalMapper(self)
        self.signalMapper.mapped[int].connect(self.buttonClicked)

        self.initUI()

    def initUI(self):
        layout = QGridLayout()

        self.setAutoFillBackground(True)
        self.text_box = QTextEdit()
        self.text_box.setFont(QFont('Arial', 12))
        self.text_box.setFixedHeight(50)
        self.text_box.setFixedWidth(587)
        layout.addWidget(self.text_box, 0, 0, 1, 13)

        names = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',
                 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',
                 '1', '2', '3', '4', '5', '5', '7', '8', '9', '0', '.', '(', ')']

        positions = [(i + 1, j) for i in range(3) for j in range(13)]

        for position, name in zip(positions, names):

            if name == '':
                continue
            button = QPushButton(name)
            button.setFont(QFont('Arial', 12))
            button.setFixedHeight(59)
            button.setFixedWidth(50)

            button.KEY_CHAR = ord(name)
            button.clicked.connect(self.signalMapper.map)
            self.signalMapper.setMapping(button, button.KEY_CHAR)
            layout.addWidget(button, *position)

        # Cancel button
        cancel_button = QPushButton('Cancel')
        cancel_button.setFixedHeight(50)
        cancel_button.setFont(QFont('Arial', 12))
        cancel_button.KEY_CHAR = Qt.Key_Cancel
        layout.addWidget(cancel_button, 5, 0, 1, 2)
        cancel_button.clicked.connect(self.signalMapper.map)
        self.signalMapper.setMapping(cancel_button, cancel_button.KEY_CHAR)
        cancel_button.setFixedWidth(60)

        # Cancel button
        clear_button = QPushButton('Clear')
        clear_button.setFixedHeight(50)
        clear_button.setFont(QFont('Arial', 12))
        clear_button.KEY_CHAR = Qt.Key_Clear
        layout.addWidget(clear_button, 5, 2, 1, 2)
        clear_button.clicked.connect(self.signalMapper.map)
        self.signalMapper.setMapping(clear_button, clear_button.KEY_CHAR)
        clear_button.setFixedWidth(60)

        # Space button
        space_button = QPushButton('Space')
        space_button.setFixedHeight(50)
        space_button.setFont(QFont('Arial', 12))
        space_button.KEY_CHAR = Qt.Key_Space
        layout.addWidget(space_button, 5, 4, 1, 3)
        space_button.clicked.connect(self.signalMapper.map)
        self.signalMapper.setMapping(space_button, space_button.KEY_CHAR)
        space_button.setFixedWidth(85)


        # Back button
        back_button = QPushButton('Back')
        back_button.setFixedHeight(50)
        back_button.setFont(QFont('Arial', 12))
        back_button.KEY_CHAR = Qt.Key_Backspace
        layout.addWidget(back_button, 5, 7, 1, 2)
        back_button.clicked.connect(self.signalMapper.map)
        self.signalMapper.setMapping(back_button, back_button.KEY_CHAR)
        back_button.setFixedWidth(60)



        # Enter button
        enter_button = QPushButton('Enter')
        enter_button.setFixedHeight(50)
        enter_button.setFont(QFont('Arial', 12))
        enter_button.KEY_CHAR = Qt.Key_Enter
        layout.addWidget(enter_button, 5, 9, 1, 2)
        enter_button.clicked.connect(self.signalMapper.map)
        self.signalMapper.setMapping(enter_button, enter_button.KEY_CHAR)
        enter_button.setFixedWidth(60)

        # Done button
        done_button = QPushButton('Done')
        done_button.setFixedHeight(50)
        done_button.setFont(QFont('Arial', 12))
        done_button.KEY_CHAR = Qt.Key_Home
        layout.addWidget(done_button, 5, 11, 1, 2)
        done_button.clicked.connect(self.signalMapper.map)
        self.signalMapper.setMapping(done_button, done_button.KEY_CHAR)
        done_button.setFixedWidth(60)

        self.setGeometry(0, 0, 600, 400)
        self.setLayout(layout)

    def buttonClicked(self, char_ord):

        txt = self.text_box.toPlainText()

        if char_ord == Qt.Key_Backspace:
            txt = txt[:-1]
        elif char_ord == Qt.Key_Enter:
            txt += chr(10)
        elif char_ord == Qt.Key_Home:
            self.currentTextBox.setText(txt)
            self.text_box.setText("")
            self.hide()
            return
        elif char_ord == Qt.Key_Clear:
            txt = ""
        elif char_ord == Qt.Key_Space:
            txt += ' '
        else:
            txt += chr(char_ord)

        self.text_box.setText(txt)

class Ui_Form(object):
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(1024, 600)
        self.widget = QtWidgets.QWidget(Form)
        self.widget.setGeometry(QtCore.QRect(0, 0, 1024, 600))
        self.widget.setObjectName("widget")
        self.label = QtWidgets.QLabel(self.widget)
        self.label.setGeometry(QtCore.QRect(0, 0, 1024, 600))
        self.label.setStyleSheet("background-image: url(:/images/background.jpeg);\n"
"border-radius: 20px;\n"
"")
        self.label.setText("")
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(self.widget)
        self.label_2.setGeometry(QtCore.QRect(0, 0, 1000, 590))
        self.label_2.setStyleSheet("background-color: rgba(0,0,0,50);\n"
"border-radius: 15px;")
        self.label_2.setText("")
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(self.widget)
        self.label_3.setGeometry(QtCore.QRect(280, 60, 571, 231))
        font = QtGui.QFont()
        font.setFamily("Malgun Gothic")
        font.setPointSize(100)
        font.setBold(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setStyleSheet("color: rgba(255, 255, 255, 100);    ")
        self.label_3.setObjectName("label_3")
        self.lineEdit = VKQLineEdit(self.widget, mainWindowObj=self)
        self.lineEdit.setGeometry(QtCore.QRect(130, 290, 801, 61))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.lineEdit.setFont(font)
        self.lineEdit.setStyleSheet("background-color: rgba(0, 0, 0, 0);\n"
"border: none;\n"
"border-bottom: 2px solid rgba(105,118,132,255);\n"
"color: rgba(255,255,255,230);\n"
"padding-bottom: 7px;")
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit_2 = VKQLineEdit(self.widget, mainWindowObj=self)
        self.lineEdit_2.setGeometry(QtCore.QRect(130, 370, 801, 61))
        font = QtGui.QFont()
        font.setPointSize(15)
        self.lineEdit_2.setFont(font)
        self.lineEdit_2.setStyleSheet("background-color: rgba(0, 0, 0, 0);\n"
"border: none;\n"
"border-bottom: 2px solid rgba(105,118,132,255);\n"
"color: rgba(255,255,255,230);\n"
"padding-bottom: 7px;")
        self.lineEdit_2.setEchoMode(QtWidgets.QLineEdit.Password)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.pushButton = QtWidgets.QPushButton(self.widget)
        self.pushButton.setGeometry(QtCore.QRect(380, 490, 281, 71))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("QPushButton#pushButton{\n"
"    \n"
"    background-color: qlineargradient(spread:reflect, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(60, 87, 118, 219), stop:1 rgba(125, 138, 152, 226));\n"
"    color: rgba(255,255,255,230);\n"
"    border-radius: 10px;\n"
"}\n"
"QPushButton#pushButton:hover{\n"
"    \n"
"    background-color: qlineargradient(spread:reflect, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(80, 107, 138, 219), stop:1 rgba(145, 158, 152, 226));\n"
"}\n"
"QPushButton#pushButton:pressed{\n"
"    padding-left: 5px;\n"
"    padding-top: 5px;\n"
"    background-color: (105,118,132,200);\n"
"}\n"
"")
        self.pushButton.setObjectName("pushButton")
        self.label_4 = QtWidgets.QLabel(self.widget)
        self.label_4.setGeometry(QtCore.QRect(20, 20, 221, 231))
        self.label_4.setStyleSheet("border-image: url(:/images/logo.png);\n"
"border-radius: 110px;")
        self.label_4.setText("")
        self.label_4.setObjectName("label_4")
        self.label_6 = QtWidgets.QLabel(self.widget)
        self.label_6.setGeometry(QtCore.QRect(140, 450, 751, 31))
        self.label_6.setStyleSheet("color: rgba(255,255,255,240);")
        self.label_6.setObjectName("label_6")
        self.pushButton.clicked.connect(self.login)

        self.keyboardWidget = KeyboardWidget(self.widget)  # Thêm dòng này
        self.keyboardWidget.hide()

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.label_3.setText(_translate("Form", "Log In"))
        self.lineEdit.setPlaceholderText(_translate("Form", "             User Name"))
        self.lineEdit_2.setPlaceholderText(_translate("Form", "             Password"))
        self.pushButton.setText(_translate("Form", "L o g   I n"))
        self.label_6.setText(_translate("Form", "                                                                   Forgot your User Name or Password?"))
###########################################################################################################

#
#                               define Function for application
#

    # Trong hàm login của class Ui_Form trong file login.py
    def login(self):
        # Lấy tên người dùng và mật khẩu từ các trường nhập liệu
        username = self.lineEdit.text()
        password = self.lineEdit_2.text()

        # So sánh tên người dùng và mật khẩu với các giá trị mặc định
        if username == "ADMIN" and password == "123":
            if username == "ADMIN" and password == "123":
                QMessageBox.information(None, "Thông báo", "Đăng nhập thành công!")

                # Đóng file hiện tại
                Form.close()

                # Thực thi file main.py
                process = subprocess.Popen(['python3', 'main.py'])
                process.wait()


        else:
            # Đăng nhập thất bại
            QMessageBox.information(None, "Thông báo", "Tên người dùng hoặc mật khẩu không hợp lệ.")



###########################################################################################################

if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)
    Form = QtWidgets.QWidget()
    ui = Ui_Form()
    ui.setupUi(Form)
    Form.show()
    sys.exit(app.exec_())
